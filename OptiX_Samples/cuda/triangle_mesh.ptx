//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23083092
// Cuda compilation tools, release 9.1, V9.1.85
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_30
.address_size 64

	// .globl	_Z14mesh_intersecti
.global .align 1 .b8 vertex_buffer[1];
.global .align 1 .b8 normal_buffer[1];
.global .align 1 .b8 texcoord_buffer[1];
.global .align 1 .b8 index_buffer[1];
.global .align 1 .b8 color_buffer[1];
.global .align 4 .b8 texcoord[12];
.global .align 4 .b8 geometric_normal[12];
.global .align 4 .b8 shading_normal[12];
.global .align 4 .b8 color[12];
.global .align 4 .b8 pos[12];
.global .align 4 .b8 back_hit_point[12];
.global .align 4 .b8 front_hit_point[12];
.global .align 4 .b8 ray[36];
.global .align 4 .b8 _ZN21rti_internal_typeinfo8texcoordE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo16geometric_normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14shading_normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo5colorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo3posE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14back_hit_pointE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo15front_hit_pointE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo3rayE[8] = {82, 97, 121, 0, 36, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 8 .b8 _ZN21rti_internal_typename8texcoordE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename16geometric_normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename14shading_normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename5colorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename3posE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename14back_hit_pointE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename15front_hit_pointE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 16 .b8 _ZN21rti_internal_typename3rayE[11] = {111, 112, 116, 105, 120, 58, 58, 82, 97, 121, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum8texcoordE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum16geometric_normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14shading_normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum5colorE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum3posE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14back_hit_pointE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum15front_hit_pointE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum3rayE = 4919;
.global .align 16 .b8 _ZN21rti_internal_semantic8texcoordE[19] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 116, 101, 120, 99, 111, 111, 114, 100, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic16geometric_normalE[27] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 103, 101, 111, 109, 101, 116, 114, 105, 99, 95, 110, 111, 114, 109, 97, 108, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic14shading_normalE[25] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 115, 104, 97, 100, 105, 110, 103, 95, 110, 111, 114, 109, 97, 108, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic5colorE[16] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 99, 111, 108, 111, 114, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic3posE[14] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 112, 111, 115, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic14back_hit_pointE[25] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 98, 97, 99, 107, 95, 104, 105, 116, 95, 112, 111, 105, 110, 116, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic15front_hit_pointE[26] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 102, 114, 111, 110, 116, 95, 104, 105, 116, 95, 112, 111, 105, 110, 116, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic3rayE[13] = {114, 116, 67, 117, 114, 114, 101, 110, 116, 82, 97, 121, 0};
.global .align 1 .b8 _ZN23rti_internal_annotation8texcoordE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation16geometric_normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14shading_normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation5colorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3posE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14back_hit_pointE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation15front_hit_pointE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3rayE[1];

.visible .entry _Z14mesh_intersecti(
	.param .u32 _Z14mesh_intersecti_param_0
)
{
	.reg .pred 	%p<14>;
	.reg .f32 	%f<157>;
	.reg .b32 	%r<49>;
	.reg .b64 	%rd<124>;


	ld.param.s32 	%rd6, [_Z14mesh_intersecti_param_0];
	mov.u64 	%rd28, index_buffer;
	cvta.global.u64 	%rd5, %rd28;
	mov.u32 	%r7, 1;
	mov.u32 	%r8, 12;
	mov.u64 	%rd27, 0;
	// inline asm
	call (%rd4), _rt_buffer_get_64, (%rd5, %r7, %r8, %rd6, %rd27, %rd27, %rd27);
	// inline asm
	ld.s32 	%rd12, [%rd4];
	mov.u64 	%rd29, vertex_buffer;
	cvta.global.u64 	%rd11, %rd29;
	ld.s32 	%rd18, [%rd4+4];
	ld.s32 	%rd24, [%rd4+8];
	// inline asm
	call (%rd10), _rt_buffer_get_64, (%rd11, %r7, %r8, %rd12, %rd27, %rd27, %rd27);
	// inline asm
	ld.f32 	%f8, [%rd10+8];
	ld.f32 	%f9, [%rd10+4];
	ld.f32 	%f10, [%rd10];
	// inline asm
	call (%rd16), _rt_buffer_get_64, (%rd11, %r7, %r8, %rd18, %rd27, %rd27, %rd27);
	// inline asm
	ld.f32 	%f11, [%rd16+8];
	ld.f32 	%f12, [%rd16+4];
	ld.f32 	%f13, [%rd16];
	// inline asm
	call (%rd22), _rt_buffer_get_64, (%rd11, %r7, %r8, %rd24, %rd27, %rd27, %rd27);
	// inline asm
	sub.f32 	%f14, %f13, %f10;
	sub.f32 	%f15, %f12, %f9;
	sub.f32 	%f16, %f11, %f8;
	ld.f32 	%f17, [%rd22+8];
	ld.f32 	%f18, [%rd22+4];
	ld.f32 	%f19, [%rd22];
	sub.f32 	%f20, %f10, %f19;
	sub.f32 	%f21, %f9, %f18;
	sub.f32 	%f22, %f8, %f17;
	mul.f32 	%f23, %f16, %f21;
	mul.f32 	%f24, %f15, %f22;
	sub.f32 	%f1, %f23, %f24;
	mul.f32 	%f25, %f14, %f22;
	mul.f32 	%f26, %f16, %f20;
	sub.f32 	%f2, %f25, %f26;
	mul.f32 	%f27, %f15, %f20;
	mul.f32 	%f28, %f14, %f21;
	sub.f32 	%f3, %f27, %f28;
	ld.global.f32 	%f29, [ray+12];
	ld.global.f32 	%f30, [ray+16];
	mul.f32 	%f31, %f30, %f2;
	fma.rn.f32 	%f32, %f29, %f1, %f31;
	ld.global.f32 	%f33, [ray+20];
	fma.rn.f32 	%f34, %f33, %f3, %f32;
	rcp.rn.f32 	%f35, %f34;
	ld.global.f32 	%f36, [ray];
	sub.f32 	%f37, %f10, %f36;
	ld.global.f32 	%f38, [ray+4];
	sub.f32 	%f39, %f9, %f38;
	ld.global.f32 	%f40, [ray+8];
	sub.f32 	%f41, %f8, %f40;
	mul.f32 	%f42, %f35, %f37;
	mul.f32 	%f43, %f35, %f39;
	mul.f32 	%f44, %f35, %f41;
	mul.f32 	%f45, %f30, %f44;
	mul.f32 	%f46, %f43, %f33;
	sub.f32 	%f47, %f45, %f46;
	mul.f32 	%f48, %f42, %f33;
	mul.f32 	%f49, %f44, %f29;
	sub.f32 	%f50, %f48, %f49;
	mul.f32 	%f51, %f43, %f29;
	mul.f32 	%f52, %f42, %f30;
	sub.f32 	%f53, %f51, %f52;
	mul.f32 	%f54, %f21, %f50;
	fma.rn.f32 	%f55, %f20, %f47, %f54;
	fma.rn.f32 	%f4, %f22, %f53, %f55;
	mul.f32 	%f56, %f15, %f50;
	fma.rn.f32 	%f57, %f14, %f47, %f56;
	fma.rn.f32 	%f5, %f16, %f53, %f57;
	mul.f32 	%f58, %f2, %f43;
	fma.rn.f32 	%f59, %f1, %f42, %f58;
	fma.rn.f32 	%f6, %f3, %f44, %f59;
	ld.global.f32 	%f60, [ray+32];
	setp.lt.f32	%p1, %f6, %f60;
	ld.global.f32 	%f61, [ray+28];
	setp.gt.f32	%p2, %f6, %f61;
	and.pred  	%p3, %p1, %p2;
	setp.ge.f32	%p4, %f4, 0f00000000;
	and.pred  	%p5, %p3, %p4;
	setp.ge.f32	%p6, %f5, 0f00000000;
	and.pred  	%p7, %p5, %p6;
	add.f32 	%f62, %f4, %f5;
	setp.le.f32	%p8, %f62, 0f3F800000;
	and.pred  	%p9, %p7, %p8;
	@!%p9 bra 	BB0_12;
	bra.uni 	BB0_1;

BB0_1:
	// inline asm
	call (%r9), _rt_potential_intersection, (%f6);
	// inline asm
	setp.eq.s32	%p10, %r9, 0;
	@%p10 bra 	BB0_12;

	mul.f32 	%f64, %f2, %f2;
	fma.rn.f32 	%f65, %f1, %f1, %f64;
	fma.rn.f32 	%f66, %f3, %f3, %f65;
	sqrt.rn.f32 	%f67, %f66;
	rcp.rn.f32 	%f68, %f67;
	mul.f32 	%f69, %f1, %f68;
	mul.f32 	%f70, %f2, %f68;
	mul.f32 	%f71, %f3, %f68;
	st.global.f32 	[geometric_normal+8], %f71;
	st.global.f32 	[geometric_normal+4], %f70;
	st.global.f32 	[geometric_normal], %f69;
	// inline asm
	call (%rd30), _rt_buffer_get_64, (%rd11, %r7, %r8, %rd12, %rd27, %rd27, %rd27);
	// inline asm
	ld.f32 	%f72, [%rd30+8];
	ld.f32 	%f73, [%rd30+4];
	ld.f32 	%f74, [%rd30];
	// inline asm
	call (%rd36), _rt_buffer_get_64, (%rd11, %r7, %r8, %rd18, %rd27, %rd27, %rd27);
	// inline asm
	ld.f32 	%f75, [%rd36+8];
	ld.f32 	%f76, [%rd36+4];
	ld.f32 	%f77, [%rd36];
	// inline asm
	call (%rd42), _rt_buffer_get_64, (%rd11, %r7, %r8, %rd24, %rd27, %rd27, %rd27);
	// inline asm
	ld.f32 	%f78, [%rd42+8];
	ld.f32 	%f79, [%rd42+4];
	ld.f32 	%f80, [%rd42];
	mul.f32 	%f81, %f5, %f80;
	mul.f32 	%f82, %f5, %f79;
	mul.f32 	%f83, %f5, %f78;
	fma.rn.f32 	%f84, %f4, %f77, %f81;
	fma.rn.f32 	%f85, %f4, %f76, %f82;
	fma.rn.f32 	%f86, %f4, %f75, %f83;
	mov.f32 	%f87, 0f3F800000;
	sub.f32 	%f88, %f87, %f4;
	sub.f32 	%f7, %f88, %f5;
	fma.rn.f32 	%f89, %f7, %f74, %f84;
	fma.rn.f32 	%f90, %f7, %f73, %f85;
	fma.rn.f32 	%f91, %f7, %f72, %f86;
	st.global.f32 	[pos], %f89;
	st.global.f32 	[pos+4], %f90;
	st.global.f32 	[pos+8], %f91;
	mov.u64 	%rd54, normal_buffer;
	cvta.global.u64 	%rd52, %rd54;
	// inline asm
	call (%rd48, %rd49, %rd50, %rd51), _rt_buffer_get_size_64, (%rd52, %r7, %r8);
	// inline asm
	cvt.u32.u64	%r18, %rd48;
	setp.eq.s32	%p11, %r18, 0;
	@%p11 bra 	BB0_4;

	// inline asm
	call (%rd55), _rt_buffer_get_64, (%rd52, %r7, %r8, %rd12, %rd27, %rd27, %rd27);
	// inline asm
	ld.f32 	%f92, [%rd55+8];
	ld.f32 	%f93, [%rd55+4];
	ld.f32 	%f94, [%rd55];
	// inline asm
	call (%rd61), _rt_buffer_get_64, (%rd52, %r7, %r8, %rd18, %rd27, %rd27, %rd27);
	// inline asm
	ld.f32 	%f95, [%rd61+8];
	ld.f32 	%f96, [%rd61+4];
	ld.f32 	%f97, [%rd61];
	// inline asm
	call (%rd67), _rt_buffer_get_64, (%rd52, %r7, %r8, %rd24, %rd27, %rd27, %rd27);
	// inline asm
	ld.f32 	%f98, [%rd67+8];
	ld.f32 	%f99, [%rd67+4];
	ld.f32 	%f100, [%rd67];
	mul.f32 	%f101, %f5, %f100;
	mul.f32 	%f102, %f5, %f99;
	mul.f32 	%f103, %f5, %f98;
	fma.rn.f32 	%f104, %f4, %f97, %f101;
	fma.rn.f32 	%f105, %f4, %f96, %f102;
	fma.rn.f32 	%f106, %f4, %f95, %f103;
	fma.rn.f32 	%f107, %f7, %f94, %f104;
	fma.rn.f32 	%f108, %f7, %f93, %f105;
	fma.rn.f32 	%f109, %f7, %f92, %f106;
	mul.f32 	%f110, %f108, %f108;
	fma.rn.f32 	%f111, %f107, %f107, %f110;
	fma.rn.f32 	%f112, %f109, %f109, %f111;
	sqrt.rn.f32 	%f113, %f112;
	rcp.rn.f32 	%f114, %f113;
	mul.f32 	%f115, %f114, %f107;
	mul.f32 	%f116, %f114, %f108;
	mul.f32 	%f117, %f114, %f109;
	st.global.f32 	[shading_normal], %f115;
	st.global.f32 	[shading_normal+4], %f116;
	st.global.f32 	[shading_normal+8], %f117;
	bra.uni 	BB0_5;

BB0_4:
	ld.global.f32 	%f118, [geometric_normal];
	ld.global.f32 	%f119, [geometric_normal+4];
	ld.global.f32 	%f120, [geometric_normal+8];
	st.global.f32 	[shading_normal+8], %f120;
	st.global.f32 	[shading_normal+4], %f119;
	st.global.f32 	[shading_normal], %f118;

BB0_5:
	mov.u64 	%rd79, texcoord_buffer;
	cvta.global.u64 	%rd78, %rd79;
	mov.u32 	%r26, 8;
	// inline asm
	call (%rd74, %rd75, %rd76, %rd77), _rt_buffer_get_size_64, (%rd78, %r7, %r26);
	// inline asm
	cvt.u32.u64	%r27, %rd74;
	setp.eq.s32	%p12, %r27, 0;
	@%p12 bra 	BB0_7;

	// inline asm
	call (%rd80), _rt_buffer_get_64, (%rd78, %r7, %r26, %rd12, %rd27, %rd27, %rd27);
	// inline asm
	ld.v2.f32 	{%f121, %f122}, [%rd80];
	// inline asm
	call (%rd86), _rt_buffer_get_64, (%rd78, %r7, %r26, %rd18, %rd27, %rd27, %rd27);
	// inline asm
	ld.v2.f32 	{%f125, %f126}, [%rd86];
	// inline asm
	call (%rd92), _rt_buffer_get_64, (%rd78, %r7, %r26, %rd24, %rd27, %rd27, %rd27);
	// inline asm
	ld.v2.f32 	{%f129, %f130}, [%rd92];
	mul.f32 	%f133, %f5, %f129;
	mul.f32 	%f134, %f5, %f130;
	fma.rn.f32 	%f135, %f4, %f125, %f133;
	fma.rn.f32 	%f136, %f4, %f126, %f134;
	fma.rn.f32 	%f137, %f7, %f121, %f135;
	fma.rn.f32 	%f138, %f7, %f122, %f136;
	st.global.f32 	[texcoord], %f137;
	st.global.f32 	[texcoord+4], %f138;
	mov.u32 	%r34, 0;
	st.global.u32 	[texcoord+8], %r34;
	bra.uni 	BB0_8;

BB0_7:
	mov.u32 	%r35, 0;
	st.global.u32 	[texcoord+8], %r35;
	st.global.u32 	[texcoord+4], %r35;
	st.global.u32 	[texcoord], %r35;

BB0_8:
	mov.u64 	%rd104, color_buffer;
	cvta.global.u64 	%rd103, %rd104;
	// inline asm
	call (%rd99, %rd100, %rd101, %rd102), _rt_buffer_get_size_64, (%rd103, %r7, %r8);
	// inline asm
	cvt.u32.u64	%r38, %rd99;
	setp.eq.s32	%p13, %r38, 0;
	@%p13 bra 	BB0_10;

	// inline asm
	call (%rd105), _rt_buffer_get_64, (%rd103, %r7, %r8, %rd12, %rd27, %rd27, %rd27);
	// inline asm
	ld.f32 	%f139, [%rd105+8];
	ld.f32 	%f140, [%rd105+4];
	ld.f32 	%f141, [%rd105];
	// inline asm
	call (%rd111), _rt_buffer_get_64, (%rd103, %r7, %r8, %rd18, %rd27, %rd27, %rd27);
	// inline asm
	ld.f32 	%f142, [%rd111+8];
	ld.f32 	%f143, [%rd111+4];
	ld.f32 	%f144, [%rd111];
	// inline asm
	call (%rd117), _rt_buffer_get_64, (%rd103, %r7, %r8, %rd24, %rd27, %rd27, %rd27);
	// inline asm
	ld.f32 	%f145, [%rd117+8];
	ld.f32 	%f146, [%rd117+4];
	ld.f32 	%f147, [%rd117];
	mul.f32 	%f148, %f5, %f147;
	mul.f32 	%f149, %f5, %f146;
	mul.f32 	%f150, %f5, %f145;
	fma.rn.f32 	%f151, %f4, %f144, %f148;
	fma.rn.f32 	%f152, %f4, %f143, %f149;
	fma.rn.f32 	%f153, %f4, %f142, %f150;
	fma.rn.f32 	%f154, %f7, %f141, %f151;
	fma.rn.f32 	%f155, %f7, %f140, %f152;
	fma.rn.f32 	%f156, %f7, %f139, %f153;
	st.global.f32 	[color], %f154;
	st.global.f32 	[color+4], %f155;
	st.global.f32 	[color+8], %f156;
	bra.uni 	BB0_11;

BB0_10:
	mov.u32 	%r45, 1065353216;
	st.global.u32 	[color+8], %r45;
	mov.u32 	%r46, 0;
	st.global.u32 	[color+4], %r46;
	st.global.u32 	[color], %r46;

BB0_11:
	mov.u32 	%r48, 0;
	// inline asm
	call (%r47), _rt_report_intersection, (%r48);
	// inline asm

BB0_12:
	ret;
}

	// .globl	_Z21mesh_intersect_refinei
.visible .entry _Z21mesh_intersect_refinei(
	.param .u32 _Z21mesh_intersect_refinei_param_0
)
{
	.reg .pred 	%p<27>;
	.reg .f32 	%f<263>;
	.reg .b32 	%r<111>;
	.reg .b64 	%rd<124>;


	ld.param.s32 	%rd6, [_Z21mesh_intersect_refinei_param_0];
	mov.u64 	%rd28, index_buffer;
	cvta.global.u64 	%rd5, %rd28;
	mov.u32 	%r17, 1;
	mov.u32 	%r18, 12;
	mov.u64 	%rd27, 0;
	// inline asm
	call (%rd4), _rt_buffer_get_64, (%rd5, %r17, %r18, %rd6, %rd27, %rd27, %rd27);
	// inline asm
	ld.s32 	%rd12, [%rd4];
	mov.u64 	%rd29, vertex_buffer;
	cvta.global.u64 	%rd11, %rd29;
	ld.s32 	%rd18, [%rd4+4];
	ld.s32 	%rd24, [%rd4+8];
	// inline asm
	call (%rd10), _rt_buffer_get_64, (%rd11, %r17, %r18, %rd12, %rd27, %rd27, %rd27);
	// inline asm
	ld.f32 	%f54, [%rd10+8];
	ld.f32 	%f55, [%rd10+4];
	ld.f32 	%f56, [%rd10];
	// inline asm
	call (%rd16), _rt_buffer_get_64, (%rd11, %r17, %r18, %rd18, %rd27, %rd27, %rd27);
	// inline asm
	ld.f32 	%f57, [%rd16+8];
	ld.f32 	%f58, [%rd16+4];
	ld.f32 	%f59, [%rd16];
	// inline asm
	call (%rd22), _rt_buffer_get_64, (%rd11, %r17, %r18, %rd24, %rd27, %rd27, %rd27);
	// inline asm
	sub.f32 	%f60, %f59, %f56;
	sub.f32 	%f61, %f58, %f55;
	sub.f32 	%f62, %f57, %f54;
	ld.f32 	%f63, [%rd22+8];
	ld.f32 	%f64, [%rd22+4];
	ld.f32 	%f65, [%rd22];
	sub.f32 	%f66, %f56, %f65;
	sub.f32 	%f67, %f55, %f64;
	sub.f32 	%f68, %f54, %f63;
	mul.f32 	%f69, %f62, %f67;
	mul.f32 	%f70, %f61, %f68;
	sub.f32 	%f1, %f69, %f70;
	mul.f32 	%f71, %f60, %f68;
	mul.f32 	%f72, %f62, %f66;
	sub.f32 	%f2, %f71, %f72;
	mul.f32 	%f73, %f61, %f66;
	mul.f32 	%f74, %f60, %f67;
	sub.f32 	%f3, %f73, %f74;
	ld.global.f32 	%f75, [ray+12];
	ld.global.f32 	%f76, [ray+16];
	mul.f32 	%f77, %f76, %f2;
	fma.rn.f32 	%f78, %f75, %f1, %f77;
	ld.global.f32 	%f79, [ray+20];
	fma.rn.f32 	%f80, %f79, %f3, %f78;
	rcp.rn.f32 	%f81, %f80;
	ld.global.f32 	%f82, [ray];
	sub.f32 	%f83, %f56, %f82;
	ld.global.f32 	%f84, [ray+4];
	sub.f32 	%f85, %f55, %f84;
	ld.global.f32 	%f86, [ray+8];
	sub.f32 	%f87, %f54, %f86;
	mul.f32 	%f88, %f81, %f83;
	mul.f32 	%f89, %f81, %f85;
	mul.f32 	%f90, %f81, %f87;
	mul.f32 	%f91, %f76, %f90;
	mul.f32 	%f92, %f89, %f79;
	sub.f32 	%f93, %f91, %f92;
	mul.f32 	%f94, %f88, %f79;
	mul.f32 	%f95, %f90, %f75;
	sub.f32 	%f96, %f94, %f95;
	mul.f32 	%f97, %f89, %f75;
	mul.f32 	%f98, %f88, %f76;
	sub.f32 	%f99, %f97, %f98;
	mul.f32 	%f100, %f67, %f96;
	fma.rn.f32 	%f101, %f66, %f93, %f100;
	fma.rn.f32 	%f4, %f68, %f99, %f101;
	mul.f32 	%f102, %f61, %f96;
	fma.rn.f32 	%f103, %f60, %f93, %f102;
	fma.rn.f32 	%f5, %f62, %f99, %f103;
	mul.f32 	%f104, %f2, %f89;
	fma.rn.f32 	%f105, %f1, %f88, %f104;
	fma.rn.f32 	%f6, %f3, %f90, %f105;
	ld.global.f32 	%f106, [ray+32];
	setp.lt.f32	%p1, %f6, %f106;
	ld.global.f32 	%f107, [ray+28];
	setp.gt.f32	%p2, %f6, %f107;
	and.pred  	%p3, %p1, %p2;
	setp.ge.f32	%p4, %f4, 0f00000000;
	and.pred  	%p5, %p3, %p4;
	setp.ge.f32	%p6, %f5, 0f00000000;
	and.pred  	%p7, %p5, %p6;
	add.f32 	%f108, %f4, %f5;
	setp.le.f32	%p8, %f108, 0f3F800000;
	and.pred  	%p9, %p7, %p8;
	@!%p9 bra 	BB1_49;
	bra.uni 	BB1_1;

BB1_1:
	// inline asm
	call (%r19), _rt_potential_intersection, (%f6);
	// inline asm
	setp.eq.s32	%p10, %r19, 0;
	@%p10 bra 	BB1_49;

	mul.f32 	%f110, %f2, %f2;
	fma.rn.f32 	%f111, %f1, %f1, %f110;
	fma.rn.f32 	%f112, %f3, %f3, %f111;
	sqrt.rn.f32 	%f113, %f112;
	rcp.rn.f32 	%f114, %f113;
	mul.f32 	%f115, %f1, %f114;
	mul.f32 	%f116, %f2, %f114;
	mul.f32 	%f117, %f3, %f114;
	st.global.f32 	[geometric_normal+8], %f117;
	st.global.f32 	[geometric_normal+4], %f116;
	st.global.f32 	[geometric_normal], %f115;
	// inline asm
	call (%rd30), _rt_buffer_get_64, (%rd11, %r17, %r18, %rd12, %rd27, %rd27, %rd27);
	// inline asm
	ld.f32 	%f9, [%rd30+8];
	ld.f32 	%f8, [%rd30+4];
	ld.f32 	%f7, [%rd30];
	// inline asm
	call (%rd36), _rt_buffer_get_64, (%rd11, %r17, %r18, %rd18, %rd27, %rd27, %rd27);
	// inline asm
	ld.f32 	%f118, [%rd36+8];
	ld.f32 	%f119, [%rd36+4];
	ld.f32 	%f120, [%rd36];
	// inline asm
	call (%rd42), _rt_buffer_get_64, (%rd11, %r17, %r18, %rd24, %rd27, %rd27, %rd27);
	// inline asm
	ld.f32 	%f121, [%rd42+8];
	ld.f32 	%f122, [%rd42+4];
	ld.f32 	%f123, [%rd42];
	mul.f32 	%f124, %f5, %f123;
	mul.f32 	%f125, %f5, %f122;
	mul.f32 	%f126, %f5, %f121;
	fma.rn.f32 	%f127, %f4, %f120, %f124;
	fma.rn.f32 	%f128, %f4, %f119, %f125;
	fma.rn.f32 	%f129, %f4, %f118, %f126;
	mov.f32 	%f130, 0f3F800000;
	sub.f32 	%f131, %f130, %f4;
	sub.f32 	%f10, %f131, %f5;
	fma.rn.f32 	%f132, %f10, %f7, %f127;
	fma.rn.f32 	%f133, %f10, %f8, %f128;
	fma.rn.f32 	%f134, %f10, %f9, %f129;
	st.global.f32 	[pos], %f132;
	st.global.f32 	[pos+4], %f133;
	st.global.f32 	[pos+8], %f134;
	mov.u64 	%rd54, normal_buffer;
	cvta.global.u64 	%rd52, %rd54;
	// inline asm
	call (%rd48, %rd49, %rd50, %rd51), _rt_buffer_get_size_64, (%rd52, %r17, %r18);
	// inline asm
	cvt.u32.u64	%r28, %rd48;
	setp.eq.s32	%p11, %r28, 0;
	@%p11 bra 	BB1_4;

	// inline asm
	call (%rd55), _rt_buffer_get_64, (%rd52, %r17, %r18, %rd12, %rd27, %rd27, %rd27);
	// inline asm
	ld.f32 	%f135, [%rd55+8];
	ld.f32 	%f136, [%rd55+4];
	ld.f32 	%f137, [%rd55];
	// inline asm
	call (%rd61), _rt_buffer_get_64, (%rd52, %r17, %r18, %rd18, %rd27, %rd27, %rd27);
	// inline asm
	ld.f32 	%f138, [%rd61+8];
	ld.f32 	%f139, [%rd61+4];
	ld.f32 	%f140, [%rd61];
	// inline asm
	call (%rd67), _rt_buffer_get_64, (%rd52, %r17, %r18, %rd24, %rd27, %rd27, %rd27);
	// inline asm
	ld.f32 	%f141, [%rd67+8];
	ld.f32 	%f142, [%rd67+4];
	ld.f32 	%f143, [%rd67];
	mul.f32 	%f144, %f5, %f143;
	mul.f32 	%f145, %f5, %f142;
	mul.f32 	%f146, %f5, %f141;
	fma.rn.f32 	%f147, %f4, %f140, %f144;
	fma.rn.f32 	%f148, %f4, %f139, %f145;
	fma.rn.f32 	%f149, %f4, %f138, %f146;
	fma.rn.f32 	%f150, %f10, %f137, %f147;
	fma.rn.f32 	%f151, %f10, %f136, %f148;
	fma.rn.f32 	%f152, %f10, %f135, %f149;
	mul.f32 	%f153, %f151, %f151;
	fma.rn.f32 	%f154, %f150, %f150, %f153;
	fma.rn.f32 	%f155, %f152, %f152, %f154;
	sqrt.rn.f32 	%f156, %f155;
	rcp.rn.f32 	%f157, %f156;
	mul.f32 	%f158, %f157, %f150;
	mul.f32 	%f159, %f157, %f151;
	mul.f32 	%f160, %f157, %f152;
	st.global.f32 	[shading_normal], %f158;
	st.global.f32 	[shading_normal+4], %f159;
	st.global.f32 	[shading_normal+8], %f160;
	bra.uni 	BB1_5;

BB1_4:
	ld.global.f32 	%f161, [geometric_normal];
	ld.global.f32 	%f162, [geometric_normal+4];
	ld.global.f32 	%f163, [geometric_normal+8];
	st.global.f32 	[shading_normal+8], %f163;
	st.global.f32 	[shading_normal+4], %f162;
	st.global.f32 	[shading_normal], %f161;

BB1_5:
	mov.u64 	%rd79, texcoord_buffer;
	cvta.global.u64 	%rd78, %rd79;
	mov.u32 	%r36, 8;
	// inline asm
	call (%rd74, %rd75, %rd76, %rd77), _rt_buffer_get_size_64, (%rd78, %r17, %r36);
	// inline asm
	cvt.u32.u64	%r37, %rd74;
	setp.eq.s32	%p12, %r37, 0;
	@%p12 bra 	BB1_7;

	// inline asm
	call (%rd80), _rt_buffer_get_64, (%rd78, %r17, %r36, %rd12, %rd27, %rd27, %rd27);
	// inline asm
	ld.v2.f32 	{%f164, %f165}, [%rd80];
	// inline asm
	call (%rd86), _rt_buffer_get_64, (%rd78, %r17, %r36, %rd18, %rd27, %rd27, %rd27);
	// inline asm
	ld.v2.f32 	{%f168, %f169}, [%rd86];
	// inline asm
	call (%rd92), _rt_buffer_get_64, (%rd78, %r17, %r36, %rd24, %rd27, %rd27, %rd27);
	// inline asm
	ld.v2.f32 	{%f172, %f173}, [%rd92];
	mul.f32 	%f176, %f5, %f172;
	mul.f32 	%f177, %f5, %f173;
	fma.rn.f32 	%f178, %f4, %f168, %f176;
	fma.rn.f32 	%f179, %f4, %f169, %f177;
	fma.rn.f32 	%f180, %f10, %f164, %f178;
	fma.rn.f32 	%f181, %f10, %f165, %f179;
	st.global.f32 	[texcoord], %f180;
	st.global.f32 	[texcoord+4], %f181;
	mov.u32 	%r44, 0;
	st.global.u32 	[texcoord+8], %r44;
	bra.uni 	BB1_8;

BB1_7:
	mov.u32 	%r45, 0;
	st.global.u32 	[texcoord+8], %r45;
	st.global.u32 	[texcoord+4], %r45;
	st.global.u32 	[texcoord], %r45;

BB1_8:
	mov.u64 	%rd104, color_buffer;
	cvta.global.u64 	%rd103, %rd104;
	// inline asm
	call (%rd99, %rd100, %rd101, %rd102), _rt_buffer_get_size_64, (%rd103, %r17, %r18);
	// inline asm
	cvt.u32.u64	%r48, %rd99;
	setp.eq.s32	%p13, %r48, 0;
	@%p13 bra 	BB1_10;

	// inline asm
	call (%rd105), _rt_buffer_get_64, (%rd103, %r17, %r18, %rd12, %rd27, %rd27, %rd27);
	// inline asm
	ld.f32 	%f182, [%rd105+8];
	ld.f32 	%f183, [%rd105+4];
	ld.f32 	%f184, [%rd105];
	// inline asm
	call (%rd111), _rt_buffer_get_64, (%rd103, %r17, %r18, %rd18, %rd27, %rd27, %rd27);
	// inline asm
	ld.f32 	%f185, [%rd111+8];
	ld.f32 	%f186, [%rd111+4];
	ld.f32 	%f187, [%rd111];
	// inline asm
	call (%rd117), _rt_buffer_get_64, (%rd103, %r17, %r18, %rd24, %rd27, %rd27, %rd27);
	// inline asm
	ld.f32 	%f188, [%rd117+8];
	ld.f32 	%f189, [%rd117+4];
	ld.f32 	%f190, [%rd117];
	mul.f32 	%f191, %f5, %f190;
	mul.f32 	%f192, %f5, %f189;
	mul.f32 	%f193, %f5, %f188;
	fma.rn.f32 	%f194, %f4, %f187, %f191;
	fma.rn.f32 	%f195, %f4, %f186, %f192;
	fma.rn.f32 	%f196, %f4, %f185, %f193;
	fma.rn.f32 	%f197, %f10, %f184, %f194;
	fma.rn.f32 	%f198, %f10, %f183, %f195;
	fma.rn.f32 	%f199, %f10, %f182, %f196;
	st.global.f32 	[color], %f197;
	st.global.f32 	[color+4], %f198;
	st.global.f32 	[color+8], %f199;
	bra.uni 	BB1_11;

BB1_10:
	mov.u32 	%r55, 1065353216;
	st.global.u32 	[color+8], %r55;
	mov.u32 	%r56, 0;
	st.global.u32 	[color+4], %r56;
	st.global.u32 	[color], %r56;

BB1_11:
	ld.global.f32 	%f200, [ray+12];
	ld.global.f32 	%f201, [ray+16];
	ld.global.f32 	%f202, [ray+20];
	ld.global.f32 	%f203, [ray];
	fma.rn.f32 	%f204, %f6, %f200, %f203;
	ld.global.f32 	%f205, [ray+4];
	fma.rn.f32 	%f206, %f6, %f201, %f205;
	ld.global.f32 	%f207, [ray+8];
	fma.rn.f32 	%f208, %f6, %f202, %f207;
	sub.f32 	%f209, %f204, %f7;
	sub.f32 	%f210, %f206, %f8;
	sub.f32 	%f211, %f208, %f9;
	ld.global.f32 	%f11, [geometric_normal];
	ld.global.f32 	%f12, [geometric_normal+4];
	mul.f32 	%f212, %f210, %f12;
	fma.rn.f32 	%f213, %f209, %f11, %f212;
	ld.global.f32 	%f13, [geometric_normal+8];
	fma.rn.f32 	%f214, %f211, %f13, %f213;
	neg.f32 	%f215, %f214;
	mul.f32 	%f216, %f12, %f201;
	fma.rn.f32 	%f217, %f11, %f200, %f216;
	fma.rn.f32 	%f218, %f13, %f202, %f217;
	div.rn.f32 	%f219, %f215, %f218;
	fma.rn.f32 	%f14, %f219, %f200, %f204;
	fma.rn.f32 	%f15, %f219, %f201, %f206;
	fma.rn.f32 	%f16, %f219, %f202, %f208;
	setp.gt.f32	%p14, %f218, 0f00000000;
	mov.b32 	 %r1, %f14;
	and.b32  	%r2, %r1, 2147483647;
	@%p14 bra 	BB1_30;
	bra.uni 	BB1_12;

BB1_30:
	setp.lt.u32	%p21, %r2, 953267991;
	@%p21 bra 	BB1_32;
	bra.uni 	BB1_31;

BB1_32:
	fma.rn.f32 	%f255, %f11, 0f38D1B717, %f14;
	bra.uni 	BB1_33;

BB1_12:
	setp.lt.u32	%p15, %r2, 953267991;
	@%p15 bra 	BB1_14;
	bra.uni 	BB1_13;

BB1_14:
	fma.rn.f32 	%f250, %f11, 0fB8D1B717, %f14;
	bra.uni 	BB1_15;

BB1_31:
	and.b32  	%r83, %r1, -2147483648;
	or.b32  	%r84, %r83, 1174405120;
	mov.b32 	 %f235, %r84;
	mul.f32 	%f236, %f235, %f11;
	cvt.rzi.s32.f32	%r85, %f236;
	add.s32 	%r86, %r85, %r1;
	mov.b32 	 %f255, %r86;

BB1_33:
	mov.b32 	 %r7, %f15;
	and.b32  	%r8, %r7, 2147483647;
	setp.lt.u32	%p22, %r8, 953267991;
	@%p22 bra 	BB1_35;
	bra.uni 	BB1_34;

BB1_35:
	fma.rn.f32 	%f256, %f12, 0f38D1B717, %f15;
	bra.uni 	BB1_36;

BB1_13:
	and.b32  	%r57, %r1, -2147483648;
	or.b32  	%r58, %r57, 1174405120;
	mov.b32 	 %f220, %r58;
	mul.f32 	%f221, %f220, %f11;
	neg.f32 	%f222, %f221;
	cvt.rzi.s32.f32	%r59, %f222;
	add.s32 	%r60, %r59, %r1;
	mov.b32 	 %f250, %r60;

BB1_15:
	mov.b32 	 %r3, %f15;
	and.b32  	%r4, %r3, 2147483647;
	setp.lt.u32	%p16, %r4, 953267991;
	@%p16 bra 	BB1_17;
	bra.uni 	BB1_16;

BB1_17:
	fma.rn.f32 	%f251, %f12, 0fB8D1B717, %f15;
	bra.uni 	BB1_18;

BB1_34:
	and.b32  	%r87, %r7, -2147483648;
	or.b32  	%r88, %r87, 1174405120;
	mov.b32 	 %f237, %r88;
	mul.f32 	%f238, %f237, %f12;
	cvt.rzi.s32.f32	%r89, %f238;
	add.s32 	%r90, %r89, %r7;
	mov.b32 	 %f256, %r90;

BB1_36:
	mov.b32 	 %r9, %f16;
	and.b32  	%r10, %r9, 2147483647;
	setp.lt.u32	%p23, %r10, 953267991;
	@%p23 bra 	BB1_38;
	bra.uni 	BB1_37;

BB1_38:
	fma.rn.f32 	%f257, %f13, 0f38D1B717, %f16;
	bra.uni 	BB1_39;

BB1_16:
	and.b32  	%r61, %r3, -2147483648;
	or.b32  	%r62, %r61, 1174405120;
	mov.b32 	 %f223, %r62;
	mul.f32 	%f224, %f223, %f12;
	neg.f32 	%f225, %f224;
	cvt.rzi.s32.f32	%r63, %f225;
	add.s32 	%r64, %r63, %r3;
	mov.b32 	 %f251, %r64;

BB1_18:
	mov.b32 	 %r5, %f16;
	and.b32  	%r6, %r5, 2147483647;
	setp.lt.u32	%p17, %r6, 953267991;
	@%p17 bra 	BB1_20;
	bra.uni 	BB1_19;

BB1_20:
	fma.rn.f32 	%f252, %f13, 0fB8D1B717, %f16;
	bra.uni 	BB1_21;

BB1_37:
	and.b32  	%r91, %r9, -2147483648;
	or.b32  	%r92, %r91, 1174405120;
	mov.b32 	 %f239, %r92;
	mul.f32 	%f240, %f239, %f13;
	cvt.rzi.s32.f32	%r93, %f240;
	add.s32 	%r94, %r93, %r9;
	mov.b32 	 %f257, %r94;

BB1_39:
	st.global.f32 	[back_hit_point], %f255;
	st.global.f32 	[back_hit_point+4], %f256;
	st.global.f32 	[back_hit_point+8], %f257;
	@%p21 bra 	BB1_41;
	bra.uni 	BB1_40;

BB1_41:
	fma.rn.f32 	%f260, %f11, 0fB8D1B717, %f14;
	bra.uni 	BB1_42;

BB1_19:
	and.b32  	%r65, %r5, -2147483648;
	or.b32  	%r66, %r65, 1174405120;
	mov.b32 	 %f226, %r66;
	mul.f32 	%f227, %f226, %f13;
	neg.f32 	%f228, %f227;
	cvt.rzi.s32.f32	%r67, %f228;
	add.s32 	%r68, %r67, %r5;
	mov.b32 	 %f252, %r68;

BB1_21:
	st.global.f32 	[back_hit_point], %f250;
	st.global.f32 	[back_hit_point+4], %f251;
	st.global.f32 	[back_hit_point+8], %f252;
	@%p15 bra 	BB1_23;
	bra.uni 	BB1_22;

BB1_23:
	fma.rn.f32 	%f260, %f11, 0f38D1B717, %f14;
	bra.uni 	BB1_24;

BB1_40:
	and.b32  	%r97, %r1, -2147483648;
	or.b32  	%r98, %r97, 1174405120;
	mov.b32 	 %f241, %r98;
	mul.f32 	%f242, %f241, %f11;
	neg.f32 	%f243, %f242;
	cvt.rzi.s32.f32	%r99, %f243;
	add.s32 	%r100, %r99, %r1;
	mov.b32 	 %f260, %r100;

BB1_42:
	@%p22 bra 	BB1_44;
	bra.uni 	BB1_43;

BB1_44:
	fma.rn.f32 	%f261, %f12, 0fB8D1B717, %f15;
	bra.uni 	BB1_45;

BB1_22:
	and.b32  	%r71, %r1, -2147483648;
	or.b32  	%r72, %r71, 1174405120;
	mov.b32 	 %f229, %r72;
	mul.f32 	%f230, %f229, %f11;
	cvt.rzi.s32.f32	%r73, %f230;
	add.s32 	%r74, %r73, %r1;
	mov.b32 	 %f260, %r74;

BB1_24:
	@%p16 bra 	BB1_26;
	bra.uni 	BB1_25;

BB1_26:
	fma.rn.f32 	%f261, %f12, 0f38D1B717, %f15;
	bra.uni 	BB1_27;

BB1_43:
	and.b32  	%r101, %r7, -2147483648;
	or.b32  	%r102, %r101, 1174405120;
	mov.b32 	 %f244, %r102;
	mul.f32 	%f245, %f244, %f12;
	neg.f32 	%f246, %f245;
	cvt.rzi.s32.f32	%r103, %f246;
	add.s32 	%r104, %r103, %r7;
	mov.b32 	 %f261, %r104;

BB1_45:
	@%p23 bra 	BB1_47;
	bra.uni 	BB1_46;

BB1_47:
	fma.rn.f32 	%f262, %f13, 0fB8D1B717, %f16;
	bra.uni 	BB1_48;

BB1_25:
	and.b32  	%r75, %r3, -2147483648;
	or.b32  	%r76, %r75, 1174405120;
	mov.b32 	 %f231, %r76;
	mul.f32 	%f232, %f231, %f12;
	cvt.rzi.s32.f32	%r77, %f232;
	add.s32 	%r78, %r77, %r3;
	mov.b32 	 %f261, %r78;

BB1_27:
	@%p17 bra 	BB1_29;
	bra.uni 	BB1_28;

BB1_29:
	fma.rn.f32 	%f262, %f13, 0f38D1B717, %f16;
	bra.uni 	BB1_48;

BB1_46:
	and.b32  	%r105, %r9, -2147483648;
	or.b32  	%r106, %r105, 1174405120;
	mov.b32 	 %f247, %r106;
	mul.f32 	%f248, %f247, %f13;
	neg.f32 	%f249, %f248;
	cvt.rzi.s32.f32	%r107, %f249;
	add.s32 	%r108, %r107, %r9;
	mov.b32 	 %f262, %r108;
	bra.uni 	BB1_48;

BB1_28:
	and.b32  	%r79, %r5, -2147483648;
	or.b32  	%r80, %r79, 1174405120;
	mov.b32 	 %f233, %r80;
	mul.f32 	%f234, %f233, %f13;
	cvt.rzi.s32.f32	%r81, %f234;
	add.s32 	%r82, %r81, %r5;
	mov.b32 	 %f262, %r82;

BB1_48:
	st.global.f32 	[front_hit_point], %f260;
	st.global.f32 	[front_hit_point+4], %f261;
	st.global.f32 	[front_hit_point+8], %f262;
	mov.u32 	%r110, 0;
	// inline asm
	call (%r109), _rt_report_intersection, (%r110);
	// inline asm

BB1_49:
	ret;
}

	// .globl	_Z11mesh_boundsiPf
.visible .entry _Z11mesh_boundsiPf(
	.param .u32 _Z11mesh_boundsiPf_param_0,
	.param .u64 _Z11mesh_boundsiPf_param_1
)
{
	.reg .pred 	%p<6>;
	.reg .f32 	%f<42>;
	.reg .b32 	%r<11>;
	.reg .b64 	%rd<30>;


	ld.param.u64 	%rd3, [_Z11mesh_boundsiPf_param_1];
	ld.param.s32 	%rd6, [_Z11mesh_boundsiPf_param_0];
	mov.u64 	%rd28, index_buffer;
	cvta.global.u64 	%rd5, %rd28;
	mov.u32 	%r7, 1;
	mov.u32 	%r8, 12;
	mov.u64 	%rd27, 0;
	// inline asm
	call (%rd4), _rt_buffer_get_64, (%rd5, %r7, %r8, %rd6, %rd27, %rd27, %rd27);
	// inline asm
	ld.s32 	%rd12, [%rd4];
	mov.u64 	%rd29, vertex_buffer;
	cvta.global.u64 	%rd11, %rd29;
	ld.s32 	%rd18, [%rd4+4];
	ld.s32 	%rd24, [%rd4+8];
	// inline asm
	call (%rd10), _rt_buffer_get_64, (%rd11, %r7, %r8, %rd12, %rd27, %rd27, %rd27);
	// inline asm
	ld.f32 	%f3, [%rd10+8];
	ld.f32 	%f2, [%rd10+4];
	ld.f32 	%f1, [%rd10];
	// inline asm
	call (%rd16), _rt_buffer_get_64, (%rd11, %r7, %r8, %rd18, %rd27, %rd27, %rd27);
	// inline asm
	ld.f32 	%f6, [%rd16+8];
	ld.f32 	%f5, [%rd16+4];
	ld.f32 	%f4, [%rd16];
	// inline asm
	call (%rd22), _rt_buffer_get_64, (%rd11, %r7, %r8, %rd24, %rd27, %rd27, %rd27);
	// inline asm
	sub.f32 	%f11, %f4, %f1;
	sub.f32 	%f12, %f5, %f2;
	sub.f32 	%f13, %f6, %f3;
	ld.f32 	%f9, [%rd22+8];
	ld.f32 	%f8, [%rd22+4];
	ld.f32 	%f7, [%rd22];
	sub.f32 	%f14, %f7, %f1;
	sub.f32 	%f15, %f8, %f2;
	sub.f32 	%f16, %f9, %f3;
	mul.f32 	%f17, %f12, %f16;
	mul.f32 	%f18, %f13, %f15;
	sub.f32 	%f19, %f17, %f18;
	mul.f32 	%f20, %f13, %f14;
	mul.f32 	%f21, %f11, %f16;
	sub.f32 	%f22, %f20, %f21;
	mul.f32 	%f23, %f11, %f15;
	mul.f32 	%f24, %f12, %f14;
	sub.f32 	%f25, %f23, %f24;
	mul.f32 	%f26, %f22, %f22;
	fma.rn.f32 	%f27, %f19, %f19, %f26;
	fma.rn.f32 	%f28, %f25, %f25, %f27;
	sqrt.rn.f32 	%f10, %f28;
	mov.pred 	%p5, 0;
	setp.leu.f32	%p4, %f10, 0f00000000;
	@%p4 bra 	BB2_2;

	abs.f32 	%f29, %f10;
	setp.neu.f32	%p5, %f29, 0f7F800000;

BB2_2:
	cvta.to.global.u64 	%rd2, %rd3;
	@%p5 bra 	BB2_4;
	bra.uni 	BB2_3;

BB2_4:
	min.f32 	%f30, %f1, %f4;
	min.f32 	%f31, %f30, %f7;
	min.f32 	%f32, %f2, %f5;
	min.f32 	%f33, %f32, %f8;
	min.f32 	%f34, %f3, %f6;
	min.f32 	%f35, %f34, %f9;
	st.global.f32 	[%rd2], %f31;
	st.global.f32 	[%rd2+4], %f33;
	st.global.f32 	[%rd2+8], %f35;
	max.f32 	%f36, %f1, %f4;
	max.f32 	%f37, %f36, %f7;
	max.f32 	%f38, %f2, %f5;
	max.f32 	%f39, %f38, %f8;
	max.f32 	%f40, %f3, %f6;
	max.f32 	%f41, %f40, %f9;
	st.global.f32 	[%rd2+12], %f37;
	st.global.f32 	[%rd2+16], %f39;
	st.global.f32 	[%rd2+20], %f41;
	bra.uni 	BB2_5;

BB2_3:
	mov.u32 	%r9, 2096152002;
	st.global.u32 	[%rd2+8], %r9;
	st.global.u32 	[%rd2+4], %r9;
	st.global.u32 	[%rd2], %r9;
	mov.u32 	%r10, -51331646;
	st.global.u32 	[%rd2+20], %r10;
	st.global.u32 	[%rd2+16], %r10;
	st.global.u32 	[%rd2+12], %r10;

BB2_5:
	ret;
}


